<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.background.dao.CommodityMapper">
  <resultMap id="BaseResultMap" type="cn.background.bean.Commodity">
    <id column="CommodityNo" jdbcType="INTEGER" property="commodityno" />
    <result column="price" jdbcType="DOUBLE" property="price" />
    <result column="NeedIntegral" jdbcType="INTEGER" property="needintegral" />
    <result column="Commoditytitle" jdbcType="VARCHAR" property="commoditytitle" />
    <result column="Commoditydetails" jdbcType="VARCHAR" property="commoditydetails" />
    <result column="Commodityinventory" jdbcType="INTEGER" property="commodityinventory" />
    <result column="CommodityTypeNo" jdbcType="INTEGER" property="commoditytypeno" />
    <result column="commodityType" jdbcType="INTEGER" property="commoditytype" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    CommodityNo, price, NeedIntegral, Commoditytitle, Commoditydetails, Commodityinventory, 
    CommodityTypeNo, commodityType
  </sql>
  <select id="selectByExample" parameterType="cn.background.bean.CommodityExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from commodity
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from commodity
    where CommodityNo = #{commodityno,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from commodity
    where CommodityNo = #{commodityno,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.background.bean.CommodityExample">
    delete from commodity
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.background.bean.Commodity">
    insert into commodity (CommodityNo, price, NeedIntegral, 
      Commoditytitle, Commoditydetails, Commodityinventory, 
      CommodityTypeNo, commodityType)
    values (#{commodityno,jdbcType=INTEGER}, #{price,jdbcType=DOUBLE}, #{needintegral,jdbcType=INTEGER}, 
      #{commoditytitle,jdbcType=VARCHAR}, #{commoditydetails,jdbcType=VARCHAR}, #{commodityinventory,jdbcType=INTEGER}, 
      #{commoditytypeno,jdbcType=INTEGER}, #{commoditytype,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="cn.background.bean.Commodity">
    insert into commodity
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="commodityno != null">
        CommodityNo,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="needintegral != null">
        NeedIntegral,
      </if>
      <if test="commoditytitle != null">
        Commoditytitle,
      </if>
      <if test="commoditydetails != null">
        Commoditydetails,
      </if>
      <if test="commodityinventory != null">
        Commodityinventory,
      </if>
      <if test="commoditytypeno != null">
        CommodityTypeNo,
      </if>
      <if test="commoditytype != null">
        commodityType,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="commodityno != null">
        #{commodityno,jdbcType=INTEGER},
      </if>
      <if test="price != null">
        #{price,jdbcType=DOUBLE},
      </if>
      <if test="needintegral != null">
        #{needintegral,jdbcType=INTEGER},
      </if>
      <if test="commoditytitle != null">
        #{commoditytitle,jdbcType=VARCHAR},
      </if>
      <if test="commoditydetails != null">
        #{commoditydetails,jdbcType=VARCHAR},
      </if>
      <if test="commodityinventory != null">
        #{commodityinventory,jdbcType=INTEGER},
      </if>
      <if test="commoditytypeno != null">
        #{commoditytypeno,jdbcType=INTEGER},
      </if>
      <if test="commoditytype != null">
        #{commoditytype,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.background.bean.CommodityExample" resultType="java.lang.Long">
    select count(*) from commodity
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update commodity
    <set>
      <if test="record.commodityno != null">
        CommodityNo = #{record.commodityno,jdbcType=INTEGER},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=DOUBLE},
      </if>
      <if test="record.needintegral != null">
        NeedIntegral = #{record.needintegral,jdbcType=INTEGER},
      </if>
      <if test="record.commoditytitle != null">
        Commoditytitle = #{record.commoditytitle,jdbcType=VARCHAR},
      </if>
      <if test="record.commoditydetails != null">
        Commoditydetails = #{record.commoditydetails,jdbcType=VARCHAR},
      </if>
      <if test="record.commodityinventory != null">
        Commodityinventory = #{record.commodityinventory,jdbcType=INTEGER},
      </if>
      <if test="record.commoditytypeno != null">
        CommodityTypeNo = #{record.commoditytypeno,jdbcType=INTEGER},
      </if>
      <if test="record.commoditytype != null">
        commodityType = #{record.commoditytype,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update commodity
    set CommodityNo = #{record.commodityno,jdbcType=INTEGER},
      price = #{record.price,jdbcType=DOUBLE},
      NeedIntegral = #{record.needintegral,jdbcType=INTEGER},
      Commoditytitle = #{record.commoditytitle,jdbcType=VARCHAR},
      Commoditydetails = #{record.commoditydetails,jdbcType=VARCHAR},
      Commodityinventory = #{record.commodityinventory,jdbcType=INTEGER},
      CommodityTypeNo = #{record.commoditytypeno,jdbcType=INTEGER},
      commodityType = #{record.commoditytype,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.background.bean.Commodity">
    update commodity
    <set>
      <if test="price != null">
        price = #{price,jdbcType=DOUBLE},
      </if>
      <if test="needintegral != null">
        NeedIntegral = #{needintegral,jdbcType=INTEGER},
      </if>
      <if test="commoditytitle != null">
        Commoditytitle = #{commoditytitle,jdbcType=VARCHAR},
      </if>
      <if test="commoditydetails != null">
        Commoditydetails = #{commoditydetails,jdbcType=VARCHAR},
      </if>
      <if test="commodityinventory != null">
        Commodityinventory = #{commodityinventory,jdbcType=INTEGER},
      </if>
      <if test="commoditytypeno != null">
        CommodityTypeNo = #{commoditytypeno,jdbcType=INTEGER},
      </if>
      <if test="commoditytype != null">
        commodityType = #{commoditytype,jdbcType=INTEGER},
      </if>
    </set>
    where CommodityNo = #{commodityno,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.background.bean.Commodity">
    update commodity
    set price = #{price,jdbcType=DOUBLE},
      NeedIntegral = #{needintegral,jdbcType=INTEGER},
      Commoditytitle = #{commoditytitle,jdbcType=VARCHAR},
      Commoditydetails = #{commoditydetails,jdbcType=VARCHAR},
      Commodityinventory = #{commodityinventory,jdbcType=INTEGER},
      CommodityTypeNo = #{commoditytypeno,jdbcType=INTEGER},
      commodityType = #{commoditytype,jdbcType=INTEGER}
    where CommodityNo = #{commodityno,jdbcType=INTEGER}
  </update>
</mapper>