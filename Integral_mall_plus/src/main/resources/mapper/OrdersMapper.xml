<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.background.dao.OrdersMapper">
  <resultMap id="BaseResultMap" type="cn.background.bean.Orders">
    <id column="OrderNo" jdbcType="INTEGER" property="orderno" />
    <result column="OrderIntegral" jdbcType="VARCHAR" property="orderintegral" />
    <result column="OrderCommodityNo" jdbcType="INTEGER" property="ordercommodityno" />
    <result column="OrderTime" jdbcType="TIMESTAMP" property="ordertime" />
    <result column="OrderStatus" jdbcType="INTEGER" property="orderstatus" />
    <result column="EmpNo" jdbcType="INTEGER" property="empno" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    OrderNo, OrderIntegral, OrderCommodityNo, OrderTime, OrderStatus, EmpNo
  </sql>
  <select id="selectByExample" parameterType="cn.background.bean.OrdersExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from orders
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from orders
    where OrderNo = #{orderno,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from orders
    where OrderNo = #{orderno,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.background.bean.OrdersExample">
    delete from orders
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.background.bean.Orders">
    insert into orders (OrderNo, OrderIntegral, OrderCommodityNo, 
      OrderTime, OrderStatus, EmpNo
      )
    values (#{orderno,jdbcType=INTEGER}, #{orderintegral,jdbcType=VARCHAR}, #{ordercommodityno,jdbcType=INTEGER}, 
      #{ordertime,jdbcType=TIMESTAMP}, #{orderstatus,jdbcType=INTEGER}, #{empno,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.background.bean.Orders">
    insert into orders
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="orderno != null">
        OrderNo,
      </if>
      <if test="orderintegral != null">
        OrderIntegral,
      </if>
      <if test="ordercommodityno != null">
        OrderCommodityNo,
      </if>
      <if test="ordertime != null">
        OrderTime,
      </if>
      <if test="orderstatus != null">
        OrderStatus,
      </if>
      <if test="empno != null">
        EmpNo,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="orderno != null">
        #{orderno,jdbcType=INTEGER},
      </if>
      <if test="orderintegral != null">
        #{orderintegral,jdbcType=VARCHAR},
      </if>
      <if test="ordercommodityno != null">
        #{ordercommodityno,jdbcType=INTEGER},
      </if>
      <if test="ordertime != null">
        #{ordertime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderstatus != null">
        #{orderstatus,jdbcType=INTEGER},
      </if>
      <if test="empno != null">
        #{empno,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.background.bean.OrdersExample" resultType="java.lang.Long">
    select count(*) from orders
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update orders
    <set>
      <if test="record.orderno != null">
        OrderNo = #{record.orderno,jdbcType=INTEGER},
      </if>
      <if test="record.orderintegral != null">
        OrderIntegral = #{record.orderintegral,jdbcType=VARCHAR},
      </if>
      <if test="record.ordercommodityno != null">
        OrderCommodityNo = #{record.ordercommodityno,jdbcType=INTEGER},
      </if>
      <if test="record.ordertime != null">
        OrderTime = #{record.ordertime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.orderstatus != null">
        OrderStatus = #{record.orderstatus,jdbcType=INTEGER},
      </if>
      <if test="record.empno != null">
        EmpNo = #{record.empno,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update orders
    set OrderNo = #{record.orderno,jdbcType=INTEGER},
      OrderIntegral = #{record.orderintegral,jdbcType=VARCHAR},
      OrderCommodityNo = #{record.ordercommodityno,jdbcType=INTEGER},
      OrderTime = #{record.ordertime,jdbcType=TIMESTAMP},
      OrderStatus = #{record.orderstatus,jdbcType=INTEGER},
      EmpNo = #{record.empno,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.background.bean.Orders">
    update orders
    <set>
      <if test="orderintegral != null">
        OrderIntegral = #{orderintegral,jdbcType=VARCHAR},
      </if>
      <if test="ordercommodityno != null">
        OrderCommodityNo = #{ordercommodityno,jdbcType=INTEGER},
      </if>
      <if test="ordertime != null">
        OrderTime = #{ordertime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderstatus != null">
        OrderStatus = #{orderstatus,jdbcType=INTEGER},
      </if>
      <if test="empno != null">
        EmpNo = #{empno,jdbcType=INTEGER},
      </if>
    </set>
    where OrderNo = #{orderno,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.background.bean.Orders">
    update orders
    set OrderIntegral = #{orderintegral,jdbcType=VARCHAR},
      OrderCommodityNo = #{ordercommodityno,jdbcType=INTEGER},
      OrderTime = #{ordertime,jdbcType=TIMESTAMP},
      OrderStatus = #{orderstatus,jdbcType=INTEGER},
      EmpNo = #{empno,jdbcType=INTEGER}
    where OrderNo = #{orderno,jdbcType=INTEGER}
  </update>
</mapper>